FROM golang:1.11-alpine3.9 AS builder

ARG GOGS_VERSION="v0.11.86"

RUN apk --no-cache --no-progress add --virtual \
    build-deps \
    build-base \
    linux-pam-dev \
    git

RUN git clone https://github.com/gogs/gogs.git && \
    cd gogs && \
    git checkout $GOGS_VERSION

# Needed since git 2.9.3 or 2.9.4 -->?
RUN git config --global http.https://gopkg.in.followRedirects true && \
    make build TAGS="sqlite cert pam"


#RUN apk --no-cache --no-progress add \
#    bash \
#    ca-certificates \
#    curl \
#    git \
#    linux-pam \
#    openssh \
#    shadow \
#    tzdata

#FROM alpine:3.9

# Install system utils & Gogs runtime dependencies
#ADD https://github.com/tianon/gosu/releases/download/1.9/gosu-arm64 /usr/sbin/gosu
#RUN chmod +x /usr/sbin/gosu \
#  && echo http://dl-2.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories \
#  && apk --no-cache --no-progress add \
#    bash \
#    ca-certificates \
#    curl \
#    git \
#    linux-pam \
#    openssh \
#    s6 \
#    shadow \
#    socat \
#    tzdata

#ENV GOGS_CUSTOM /data/gogs

# Configure LibC Name Service
#COPY docker/nsswitch.conf /etc/nsswitch.conf
#COPY docker /app/gogs/docker
#COPY templates /app/gogs/templates
#COPY public /app/gogs/public

#WORKDIR /app/gogs/build
#COPY . .
#
#RUN    ./docker/build-go.sh \
#    && ./docker/build.sh \
#    && ./docker/finalize.sh

# Configure Docker Container
#VOLUME ["/data"]
#EXPOSE 22 3000
#ENTRYPOINT ["/app/gogs/docker/start.sh"]
#CMD ["/bin/s6-svscan", "/app/gogs/docker/s6/"]
